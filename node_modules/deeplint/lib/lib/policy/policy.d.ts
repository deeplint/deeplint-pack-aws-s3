import { CheckingResults, FixingResults, Meta, Snapshot } from './model';
import { PolicyConfig } from '../module/spec';
export declare class Policy {
    readonly meta: Meta;
    private readonly processedInputs;
    constructor(meta: Meta, processedInputs: {
        [key: string]: any;
    });
    get rules(): {
        [key: string]: import("./spec").RuleSpec;
    };
    get name(): string;
    get path(): string;
    get actions(): {
        [key: string]: import("./spec").ActionSpec;
    } | undefined;
    get scanners(): {
        [key: string]: import("./spec").ScannerSpec;
    };
    get inputs(): {
        [key: string]: any;
    };
    static build(policyConfig: PolicyConfig, policyName: string, moduleName: string): Promise<Policy>;
    snap(): Promise<Snapshot>;
    check(snapshot: Snapshot): Promise<CheckingResults>;
    fix(checkingResults: CheckingResults): Promise<FixingResults>;
}
