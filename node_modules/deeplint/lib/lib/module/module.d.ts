import { Policy } from '../policy/policy';
import { ModuleSpec } from './spec';
import { ModuleConfig } from '../config';
import { CheckingResults, FixingResults, Meta, Snapshot } from '../policy/model';
export declare class Module {
    readonly meta: {
        readonly moduleName: string;
        readonly moduleConfig?: ModuleConfig;
        readonly modulePath: string;
        readonly moduleSpec: ModuleSpec;
    };
    private readonly policies;
    constructor(meta: {
        readonly moduleName: string;
        readonly moduleConfig: ModuleConfig;
        readonly modulePath: string;
        readonly moduleSpec: ModuleSpec;
    }, policies: Map<string, Policy>);
    static build(moduleConfig: ModuleConfig, moduleName: string): Promise<Module>;
    getPoliciesMeta(): {
        [key: string]: Meta;
    };
    snap(): Promise<{
        [key: string]: Snapshot;
    }>;
    check(snapshots: {
        [key: string]: Snapshot;
    }): Promise<{
        [key: string]: CheckingResults;
    }>;
    fix(checkingResults: {
        [key: string]: CheckingResults;
    }): Promise<{
        [key: string]: FixingResults;
    }>;
}
